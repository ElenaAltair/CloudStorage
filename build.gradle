plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2' //3.3.2
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ru.netology'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

//jar {
//manifest {
//attributes(
//'Main-Class': 'ru.netology.cloudstorage.CloudStorageApplication'
//)
//}
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql:1.17.6'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	implementation 'org.liquibase:liquibase-core:4.24.0'
	implementation 'org.postgresql:postgresql:42.6.0'

	// зависимости для генерации JWT токенов (JSON Web Token)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	//compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// implementation 'javax.persistence:persistence-api:1.0-rev-1'

}


tasks.named('test') {
	useJUnitPlatform()
}